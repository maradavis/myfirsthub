library(Intro2R)
warning()
warning(TRUE)
usethis:: use_mit_license(copyright_holder = "Mara Davis")
usethis::use_mit_license(copyright_holder = "Mara Davis")
library(Intro2R)
ddt$RIVER
table(ddt$RIVER)
RR
windows(); barplot(RR)
ddt$(RR)
usethis::create_github_token()
usethis::create_github_token()
library(FALL224753davi0459)
#'
#' This function will make a plot of a random sample
#'
#' @param n = Sample size
#'
#' @return a histogram
#' @export
#'
#' @examples
#' mysamp(n = 480)
mysamp <- function(){
hist(sample())
}
#'
#' This function will make a plot of a random sample
#'
#' @param n = Sample size
#'
#' @return a histogram
#' @export
#'
#' @examples
#' mysamp(n = 480)
mysamp <- function(){
hist(sample())
}
hist(sample(x))
hist(sample(x = 4, size = 20, prob = .5))
hist(sample(4, size = 20, prob = .5))
hist(sample(4, size = 20, replace = FALSE, prob = .5))
hist(sample(4, size = 20, replace = TRUE, prob = .5))
hist(sample(4, size = 20, replace = TRUE, prob = 0.5))
#'
#' This function will make it easier to plot one sample
#'
#' @param n = Sample size
#'
#' @return a histogram plot
#' @export
#'
#' @examples
#' ones()
ones <- function(n){
mysample(n, iter=1,time=1)
}
ones <- function(n){
mysample(n, iter=1,time=1)
}
ones(1000)
}
#'
#' This function will make it easier to plot one sample
#'
#' @param n = Sample size
#'
#' @return a histogram plot
#' @export
#'
#' @examples
#' ones()
hypergeo <- function(iter=100,N=20,r=12,n=5){
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
succ=c()
for(i in 1:iter){
sam.mat[,i]=sample(rep(c(1,0),c(r,N-r)),n,replace=FALSE)
succ[i]=sum(sam.mat[,i])
}
succ.tab=table(factor(succ,levels=0:n))
barplot(succ.tab/(iter), col=rainbow(n+1), main="HYPERGEOMETRIC simulation", xlab="Number of successes")
succ.tab/iter
}
hypergeo(iter = 250, N = 15, r = 12, n = 6)
hypergeo()
#' This function will make it easier to plot one sample using the hypergeomtric distribution
#'
#' @param n = sample size
#'
#'
#' @return a histogram plot
#' @export
#'
#' @examples
#'
hypergeo <- function(iter,N,r,n){
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
succ=c()
for(i in 1:iter){
sam.mat[,i]=sample(rep(c(1,0),c(r,N-r)),n,replace=FALSE)
succ[i]=sum(sam.mat[,i])
}
succ.tab=table(factor(succ,levels=0:n))
barplot(succ.tab/(iter), col=rainbow(n+1), main="HYPERGEOMETRIC simulation", xlab="Number of successes")
succ.tab/iter
}
library(FALL224753davi0459)
library(FALL224753davi0459)
library(FALL224753davi0459)
library(FALL224753davi0459)
myncurve(mu =10, sigma = 5, a = 6)
library(FALL224753davi0459)
myncurve
myncurve(mu = 10, sigma = 5, a = 6)
myncurve(mu = 10, sigma = 5, a = 6)
prob=round(pnorm(a,mean=mu,sd=sigma),4)
library(FALL224753davi0459)
myncurve(mu = 10, sigma = 5, x = 6)
library(FALL224753davi0459)
myncurve(mu = 10, sigma = 5, x = 6, b = NULL)
myncurve(mu = 10, sigma = 5, x = 6, b = 0)
length(x)
library(FALL224753davi0459)
myncurve(mu = 10, sigma = 5, a = 6)
library(FALL224753davi0459)
myntickets(N = 400, gamma = 0.02, p = 0.95)
library(FALL224753davi0459)
library(FALL224753davi0459)
library(FALL224753davi0459)
ntickets(N=400, gamma = 0.02, p = 0.95)
ntickets(N=400, gamma = 0.02, p = 0.95)
library(FALL224753davi0459)
ntickets(N = 400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets((N=400))
library(FALL224753davi0459)
library(FALL224753davi0459)
ntickets(N=400)
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
ntickets()
library(FALL224753davi0459)
ntickets()
library(FALL224753davi0459)
ntickets()
library(FALL224753davi0459)
ntickets(N=400)
ntickets()
ntickets(N=400)
library(FALL224753davi0459)
ntickets(N=400)
library(FALL224753davi0459)
ntickets()
library(FALL224753davi0459)
ntickets
ntickets()
library(FALL224753davi0459)
ntickets()
library(FALL224753davi0459)
load("C:/Users/Owner/Downloads/fire.rda")
fire = read.csv(file.choose())
fire = read.csv(file.choose())
usethis::use_data(fire)
load("C:/Users/Owner/Downloads/fire (2).rda")
fire
devtools::install(build_vignettes = TRUE)
FALL224753davi0459::fire
?fire
library(FALL224753davi0459)
library(FALL224753davi0459)
git init
getwd()
git init
git init.
echo "# MATH4753" >> README.md
git remote add origin https://github.com/maradavis/MATH4753.git
